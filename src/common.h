#ifndef clox_common_h
#define clox_common_h

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

/**
 * Use
 * `NaN boxing <https://craftinginterpreters.com/optimization.html#nan-boxing>`_
 * to store values instead of the default tagged union. NaN boxing stores
 * information in the unused bits of NaN values, which can then be pulled out
 * again when needed, making values half the size of the tagged union. Specs don't
 * specify that this will always work, so it may cause problems on some
 * architectures, but is fine on all tested so far.
 */
#define NAN_BOXING

/** When enabled, prints the generated bytecode for each function. */
#define DEBUG_PRINT_CODE

/** When enabled, prints the bytecode and stack as the VM runs through a program. */
#define DEBUG_TRACE_EXECUTION

/**
 * When enabled, runs the garbage collector after every allocation to squeeze out
 * any bugs in the GC.
 */
#define DEBUG_STRESS_GC

/** Logs all activity of the GC, such as allocation, freeing, and marking. */
#define DEBUG_LOG_GC

#undef DEBUG_PRINT_CODE
#undef DEBUG_TRACE_EXECUTION
#undef DEBUG_STRESS_GC
#undef DEBUG_LOG_GC

#define UINT8_COUNT (UINT8_MAX + 1)

#endif